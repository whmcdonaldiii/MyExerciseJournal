@using MyExerciseJournal.Models

<MudPaper Class="pa-4" Elevation="4">
    <MudGrid>
        <MudItem xs="12">
            <MudSelect T="string" Label="Select Exercise" @bind-Value="SelectedExercise">
                @foreach (var exercise in Exercises)
                {
                    <MudSelectItem Value="@exercise">@exercise</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudNumericField T="int" @bind-Value="Sets" Label="Sets" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudNumericField @bind-Value="Reps" Label="Reps" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudNumericField T="decimal" @bind-Value="Weight" Label="Weight" Variant="Variant.Filled" Format="F1" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudNumericField @bind-Value="RestTime" Label="Rest Time (seconds)" Variant="Variant.Filled" />
        </MudItem>
        <MudItem xs="12">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveExercise">Save</MudButton>
        </MudItem>
    </MudGrid>
</MudPaper>

@code {

    [Parameter] public Exercise? Exercise { get; set; }
    [Parameter] public SessionType? SelectedSessionType { get; set; }
    [Parameter] public EventCallback<Exercise> OnSave { get; set; }

    protected override void OnParametersSet()
    {
        SetExerciseList();
    }

    private string SelectedExercise
    {
        get => Exercise.Name;
        set => Exercise.Name = value;
    }

    private int Sets
    {
        get => Exercise.Sets;
        set => Exercise.Sets = value;
    }

    private int Reps
    {
        get => Exercise.Reps;
        set => Exercise.Reps = value;
    }

    private decimal Weight
    {
        get => Exercise.Weight;
        set => Exercise.Weight = value;
    }

    private int RestTime
    {
        get => Exercise.RestTime;
        set => Exercise.RestTime = value;
    }

    private List<string> Exercises;

    private void SetExerciseList()
    {
        switch(SelectedSessionType)
        {
            case SessionType.Legs:
                Exercises = new() { "Squat", "Deadlift" };
                break;
            case SessionType.Push:
                Exercises = new() { "Bench Press", "Overhead Press" };
                break;
            case SessionType.Pull:
                Exercises = new() { "Pull Up", "Barbell Rows" };
                break;
            default: Exercises = new() { "Squat", "Deadlift" };
                break;
        }
    }

    private async Task SaveExercise()
    {
        Exercise.Name = SelectedExercise;
        await OnSave.InvokeAsync(Exercise);
    }
}

